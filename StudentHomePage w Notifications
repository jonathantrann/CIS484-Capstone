using Lab3.Pages.DataClasses;
using Lab3.Pages.DB;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using System.Data.SqlClient;
using System.Diagnostics;

namespace Lab3.Pages.StudentPages
{
    public class StudentHomeModel : PageModel
    {
        [BindProperty] public String? SelectedStudent { get; set; }

        public List<SpecificQueue> SpecificQueueList;
        // Create a list for students
        public List<Student> StudentList { get; set; }

        public bool IsReadyForOfficeHours { get; set; }
        
        public string FacultyName { get; set; }

        public StudentHomeModel()
        {
            StudentList = new List<Student>();

            SpecificQueueList = new List<SpecificQueue>();
        }


        public IActionResult OnGet()
        {
            var username = HttpContext.Session.GetString("Username");


            if (username == null)
            {
                return new RedirectToPageResult("/Login/StudentLogin");
            }
            else
            {
                // Reads in data from the student table and converts it to strings
                SqlDataReader SpecificQueueReader = DBClass.SpecificQueue(username);

                while (SpecificQueueReader.Read())
                {


                    SpecificQueueList.Add(new SpecificQueue
                    {
                        OfficeHoursDays = (SpecificQueueReader["OfficeHoursDays"].ToString()),
                        OHStartTime = SpecificQueueReader["OHStartTime"].ToString(),
                        OHEndTime = SpecificQueueReader["OHEndTime"].ToString(),
                        FacultyFirst = SpecificQueueReader["FacultyFirst"].ToString(),
                        FacultyLast = SpecificQueueReader["FacultyLast"].ToString(),
                        WaitingRoom = SpecificQueueReader["WaitingRoom"].ToString(),

                    });
                }

                string studentID = HttpContext.Session.GetString("ID");
                SqlDataReader officeHoursReader = DBClass.OfficeHoursReader2(studentID);
                while (officeHoursReader.Read())
                {
                    Debug.WriteLine(HttpContext.Session.GetString("ID"));
                    if (HttpContext.Session.GetString("ID") == null)
                    {
                        return RedirectToPage("Login");
                        //return Page();
                    }
                    // Get the instructor name for the first signed up office hours
                    Tuple<int, int, bool> queueInfo = DBClass.GetStudentQueueInfo(int.Parse(officeHoursReader["OfficeHoursID"].ToString()), int.Parse(HttpContext.Session.GetString("ID")));
                    if (queueInfo.Item3)
                    {
                        Debug.WriteLine("test2");
                        IsReadyForOfficeHours = true;
                        FacultyName = officeHoursReader["FacultyFirst"].ToString() + " " + officeHoursReader["FacultyLast"].ToString();

                    }
                    return Page();
                }
                return Page();
            }
        }
    }
}

